#!/usr/bin/env python3
"""
Script para debugar vari√°veis de ambiente
"""

import os
from dotenv import load_dotenv

def debug_env():
    """Debuga as vari√°veis de ambiente"""
    print("üîç Debug das Vari√°veis de Ambiente")
    print("=" * 50)
    
    # Carregar .env
    print("1. Carregando arquivo .env...")
    load_dotenv()
    
    # Verificar chaves
    print("\n2. Verificando chaves de API:")
    
    openai_key = os.getenv('OPENAI_API_KEY')
    anthropic_key = os.getenv('ANTHROPIC_API_KEY')
    google_key = os.getenv('GOOGLE_API_KEY')
    
    print(f"OPENAI_API_KEY: {'‚úÖ Configurada' if openai_key else '‚ùå N√£o configurada'}")
    if openai_key:
        print(f"   Valor: {openai_key[:20]}...{openai_key[-10:]}")
        print(f"   Tamanho: {len(openai_key)} caracteres")
        print(f"   Come√ßa com 'sk-': {openai_key.startswith('sk-')}")
    
    print(f"\nANTHROPIC_API_KEY: {'‚úÖ Configurada' if anthropic_key else '‚ùå N√£o configurada'}")
    if anthropic_key:
        print(f"   Valor: {anthropic_key[:20]}...{anthropic_key[-10:]}")
        print(f"   Tamanho: {len(anthropic_key)} caracteres")
        print(f"   Come√ßa com 'sk-ant-api': {anthropic_key.startswith('sk-ant-api')}")
    
    print(f"\nGOOGLE_API_KEY: {'‚úÖ Configurada' if google_key else '‚ùå N√£o configurada'}")
    if google_key:
        print(f"   Valor: {google_key[:20]}...{google_key[-10:]}")
        print(f"   Tamanho: {len(google_key)} caracteres")
        print(f"   Come√ßa com 'AIza': {google_key.startswith('AIza')}")
    
    # Verificar se s√£o valores padr√£o
    print("\n3. Verificando se s√£o valores padr√£o:")
    if openai_key == "sua_chave_openai_aqui":
        print("‚ùå OPENAI_API_KEY ainda tem valor padr√£o")
    else:
        print("‚úÖ OPENAI_API_KEY foi alterada")
    
    if anthropic_key == "sua_chave_anthropic_aqui":
        print("‚ùå ANTHROPIC_API_KEY ainda tem valor padr√£o")
    else:
        print("‚úÖ ANTHROPIC_API_KEY foi alterada")
    
    if google_key == "sua_chave_google_aqui":
        print("‚ùå GOOGLE_API_KEY ainda tem valor padr√£o")
    else:
        print("‚úÖ GOOGLE_API_KEY foi alterada")
    
    # Testar leitura direta do arquivo
    print("\n4. Lendo arquivo .env diretamente:")
    try:
        with open('.env', 'r') as f:
            content = f.read()
            lines = content.split('\n')
            
        for line in lines:
            if line.startswith('OPENAI_API_KEY='):
                print(f"OPENAI_API_KEY no arquivo: {line[:30]}...")
            elif line.startswith('ANTHROPIC_API_KEY='):
                print(f"ANTHROPIC_API_KEY no arquivo: {line[:30]}...")
            elif line.startswith('GOOGLE_API_KEY='):
                print(f"GOOGLE_API_KEY no arquivo: {line[:30]}...")
    except Exception as e:
        print(f"‚ùå Erro ao ler arquivo .env: {e}")
    
    # Testar ai_manager
    print("\n5. Testando ai_manager:")
    try:
        from ai_manager import ai_manager
        
        print("‚úÖ ai_manager importado com sucesso")
        
        # Verificar se os clientes foram configurados
        if ai_manager.openai_client:
            print("‚úÖ Cliente OpenAI configurado")
        else:
            print("‚ùå Cliente OpenAI n√£o configurado")
            
        if ai_manager.anthropic_client:
            print("‚úÖ Cliente Anthropic configurado")
        else:
            print("‚ùå Cliente Anthropic n√£o configurado")
            
        if ai_manager.google_genai:
            print("‚úÖ Cliente Google configurado")
        else:
            print("‚ùå Cliente Google n√£o configurado")
            
    except Exception as e:
        print(f"‚ùå Erro ao importar ai_manager: {e}")

if __name__ == "__main__":
    debug_env() 